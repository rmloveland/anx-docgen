#+title: Notes on ANX-Docgen
#+author: Rich Loveland
#+email: loveland.richard@gmail.com

* A New Intermediate Representation is Needed

  Instead of focusing on Confluence's current formatting preferences
  as our (moving) target, we propose to get our documentation tables
  into Lisp as an intermediate representation. From there we can
  transform it to whatever we need. Below are some proposed data
  representations for working with both regular APIs and reports.

* The Proposed New Document Structure

  The document below is represented as an alist, which has some nice
  properties. For example, we can query any section of the document
  programmatically and read or modify its contents.

** Standard Services

  | JSON Fields (Parent Table)                |
  |-------------------------------------------|
  | More JSON Fields (Child Tables)           |
  |-------------------------------------------|
  | Even more JSON Fields (Grandchild Tables) |

   #+begin_src emacs-lisp
     ((parent ((title (text "JSON Fields")) 
               (header ("Name" "Type" "Sort by?" "Filter by?" "Description" "Default" "Required on")) 
               (items ((name . "inventory_attributes") 
                       (type . "array of objects") 
                       (sort_by . "No") 
                       (filter_by . "No") 
                       (description . "") 
                       (default . "") 
                       (required_on . "")) 
                      ((name . "supported_media_types") 
                       (type . "array of objects") 
                       (sort_by . "No") 
                       (filter_by . "No") 
                       (description . "") 
                       (default . "") 
                       (required_on . "")) 
                      ;; etc.
                      )))
      (children (((title (text "Inventory_Attributes")) 
                  (header ("Name" "Type" "Sort by?" "Filter by?" "Description" "Default" "Required on")) 
                  (items ((name . "id") 
                          (type . "int") 
                          (sort_by . "No") 
                          (filter_by . "No") 
                          (description . "") 
                          (default . "") 
                          (required_on . "")) 
                         ((name . "name") 
                          (type . "string") 
                          (sort_by . "No") 
                          (filter_by . "No") 
                          (description . "") 
                          (default . "") 
                          (required_on . "")))) 
                 ((title (text "Supported_Media_Types")) 
                  (header ("Name" "Type" "Sort by?" "Filter by?" "Description" "Default" "Required on")) 
                  (items ((name . "id") 
                          (type . "int") 
                          (sort_by . "No") 
                          (filter_by . "No") 
                          (description . "") 
                          (default . "") 
                          (required_on . "")) 
                         ((name . "name") 
                          (type . "string") 
                          (sort_by . "No") 
                          (filter_by . "No") 
                          (description . "") 
                          (default . "") 
                          (required_on . ""))))
                 ;; etc.
                 )))
     
   #+end_src
  
** Report Services

  | Dimensions |
  |------------|
  | Metrics    |

   #+begin_src emacs-lisp
     '((dimensions
       (title
        (text "Dimensions"))
       (header
        ("Column" "Type" "Group?" "Filter?" "Description"))
       (items
        (advertiser
         (column "advertiser") 
         (type "string")
         (group_by "Yes")
         (filter_by "Yes")
         (description "The name and ID of the advertiser"))
        (publisher
         (column "publisher") 
         (type "string")
         (group_by "Yes")
         (filter_by "Yes")
         (description "The name and ID of the publisher"))))
       (metrics
        (title
         (text "Metrics"))
        (header
         ("Column" "Type" "Formula" "Description"))
        (items
         (imps
          (column "imps")
          (type "int")
          (formula "imps")
          (description "The number of impressions"))
         (clicks
          (column "clicks")
          (type "int")
          (formula "clicks")
          (description "The number of clicks")))))
     
   #+end_src

* Things To Do

** TODO Modify anx-docgen.el to output Lisp

** TODO Look into esxml

   Rather than reinvent the wheel with your own format, research
   whether output from esxml will suffice.

** DONE Rewrite intermediate Lisp representation for standard reports as an alist

   See [[Report Services]].
